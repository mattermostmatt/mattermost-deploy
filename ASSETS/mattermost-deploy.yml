AWSTemplateFormatVersion: "2010-09-09"

Description: "Amazon Linux bastion4 host based on region with SSH ingress from single parameterized IP"

Parameters:

  VPCID:
    Type: "AWS::EC2::VPC::Id"
    Description: "VPC ID"

  publicsubnet1:
    Type: "AWS::EC2::Subnet::Id"
    Description: "Public Subnet ID"

  KeyPairPrimary1:
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: ""
    Description: "Primary EC2 KeyPair 1"

  InstanceHostName:
    Type: String
    Default: bastion4
    Description: Instance hostname.  Can be single word or.multiple.words. Will be instance Name tag.

  InstanceSize1:
    Type: String
    Default: t3.small
    Description: Instance size of the bastion4 server

  TagEnvironment:
    Type: String
    Description: Environment type for default resource tagging
    Default: production
    AllowedValues:
      - production
      - staging
      - sandbox
      - test
      - development
      - qa

  TagOwner:
    Type: String
    Description: Owner of the resources.  Person/Department,etc
    Default: ""

  IngressIP1:
    Type: String
    Description: Single IP address ending in /32 for SSH ingress


Metadata:
  AWS::CloudFormation::Interface:
      ParameterGroups:
        - Label:
            default: "Network Settings"
          Parameters:
              - VPCID
              - VPCCidr
              - publicsubnet1
        - Label:
            default: "EC2 Stack Settings"
          Parameters:
            - InstanceHostName
            - InstanceSize1
            - KeyPairPrimary1
            - IngressIP1
        - Label:
            default: "Tagging"
          Parameters:
            - TagEnvironment
            - TagOwner


# Map last updated 2024-06-13 Rich
Mappings:
  RegionMap:
    us-east-1:
      "azLinAmi": "ami-0b3aef6bc281a13b2"   # US East (N. Virginia)
    us-east-2:
      "azLinAmi": "ami-086c1d77a774201ee"   # US East (Ohio)
    us-west-1:
      "azLinAmi": "ami-0358d6db3187f001b"   # US West (N. California)
    us-west-2:
      "azLinAmi": "ami-0acb9a8339ab465bd"   # US West (Oregon)
    ca-central-1:
      "azLinAmi": "ami-0c2fab732e3eb14fe"   # Canada (Central)
    eu-west-1:
      "azLinAmi": "ami-0ed1631076fb35bc2"   # EU (Ireland)
    eu-central-1:
      "azLinAmi": "ami-00e89f3f4910f40a1"   # EU (Frankfurt)
    eu-west-2:
      "azLinAmi": "ami-08b2435fa0ac624f9"   # EU (London)
    ap-southeast-1:
      "azLinAmi": "ami-03137560e4bb69bbe"   # Asia Pacific (Singapore)
    ap-southeast-2:
      "azLinAmi": "ami-03724927d4f98e431"   # Asia Pacific (Sydney)
    ap-northeast-2:
      "azLinAmi": "ami-0ebb3f23647161078"   # Asia Pacific (Seoul)
    ap-northeast-1:
      "azLinAmi": "ami-029dc392355a76964"   # Asia Pacific (Tokyo)
    ap-south-1:
      "azLinAmi": "ami-09859101d317198f9"   # Asia Pacific (Mumbai)
    sa-east-1:
      "azLinAmi": "ami-044119023860b7ad3"   # South America (Sao Paulo)


Resources:

  sgbastion4:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: bastion4
      GroupDescription: ingress host for management
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: '6'
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref IngressIP1
      SecurityGroupEgress:
        - IpProtocol: '-1'
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: "Name"
          Value: "bastion4"
        - Key: "managed-by"
          Value: cloudformation
        - Key: "environment"
          Value: !Ref TagEnvironment
        - Key: owner
          Value: !Ref TagOwner

  rolebastion4:
    Type: "AWS::IAM::Role"
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      RoleName: bastion4

  policyCloudWatchLogPut:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "ec2-cloudwatch-writeonly"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              -  "logs:CreateLogGroup"
              -  "logs:CreateLogStream"
              -  "logs:PutLogEvents"
              -  "logs:DescribeLogStreams"
            Resource:
              - "arn:aws:logs:*:*:*"
      Roles:
        - !Ref rolebastion4

  instanceProfilebastion4:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - !Ref rolebastion4
      InstanceProfileName: bastion4

  ec2bastion4:
    Type: "AWS::EC2::Instance"
    Properties:
      BlockDeviceMappings:
        -
          DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp3
            VolumeSize: 20
      DisableApiTermination: false
      EbsOptimized: "true"
      IamInstanceProfile: !Ref instanceProfilebastion4
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", azLinAmi]
      InstanceType: !Ref InstanceSize1
      KeyName: !Ref KeyPairPrimary1
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - !Ref sgbastion4
          SubnetId: !Ref publicsubnet1
      Tags:
        - Key: "Name"
          Value: !Ref InstanceHostName
        - Key: "backup"
          Value: "no"
        - Key: "retention"
          Value: "7"
        - Key: "managed-by"
          Value: cloudformation
        - Key: "environment"
          Value: !Ref TagEnvironment
        - Key: owner
          Value: !Ref TagOwner
        - Key: ssm
          Value: yes
      UserData:
          Fn::Base64: !Sub
           - |
             #!/bin/bash
             sed -i s/^HOSTNAME.*/HOSTNAME=${Hostname1}/g /etc/sysconfig/network
             yum -y update
             yum -y install bind-tools htop telnet net-tools vim git wget
             yum -y install https://ec2-downloads-windows.s3.amazonaws.com/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
             yum -y install awslogs
             wget https://privo-public-configuration.s3.amazonaws.com/awslogs/amazon-linux/awslogs.conf -O /etc/awslogs/awslogs.conf
             chkconfig awslogs on
             sed -i s/us\-east\-1/${AWS::Region}/g /etc/awslogs/awscli.conf
             service awslogs restart
             reboot
           - { Hostname1: !Ref InstanceHostName}


Outputs:

  SSHIngressIP:
    Value: !Ref IngressIP1
    Description: bastion4 is allowed SSH ingress from this IP
